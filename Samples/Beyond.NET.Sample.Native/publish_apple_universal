#!/usr/bin/env bash

set -e

PRODUCT_NAME="BeyondDotNETSampleNative"
OUTPUT_PRODUCT_NAME="lib${PRODUCT_NAME}"
BUILD_CONFIGURATION="Release"

OUTPUT_FILE_NAME="${OUTPUT_PRODUCT_NAME}.dylib"
UNIVERSAL_FILE_NAME="${PRODUCT_NAME}.xcframework"

DOTNET_PATH=`which dotnet`
DOTNET_VERSION=`${DOTNET_PATH} --version`
DOTNET_VERSION_MAJOR_AND_MINOR=${DOTNET_VERSION:0:3}

VERBOSITY_LEVEL="normal"

RUNTIME_IDENTIFIER_MACOS_X64="osx-x64"
RUNTIME_IDENTIFIER_MACOS_ARM64="osx-arm64"
RUNTIME_IDENTIFIER_MACOS_UNIVERSAL="osx-universal"

RUNTIME_IDENTIFIER_IOS_ARM64="ios-arm64"
RUNTIME_IDENTIFIER_IOS_SIMULATOR_ARM64="iossimulator-arm64"
RUNTIME_IDENTIFIER_IOS_SIMULATOR_X64="iossimulator-x64"
RUNTIME_IDENTIFIER_IOS_SIMULATOR_UNIVERSAL="iossimulator-universal"
RUNTIME_IDENTIFIER_IOS_UNIVERSAL="ios-universal"

RUNTIME_IDENTIFIER_APPLE_UNIVERSAL="apple-universal"

BIN_DIR="bin"
PUBLISH_DIR="publish"
DOTNET_TARGET_FRAMEWORK="net${DOTNET_VERSION_MAJOR_AND_MINOR}"

IOS_ARM64_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_IOS_ARM64}/${PUBLISH_DIR}"
IOS_SIMULATOR_ARM64_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_IOS_SIMULATOR_ARM64}/${PUBLISH_DIR}"
IOS_SIMULATOR_X64_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_IOS_SIMULATOR_X64}/${PUBLISH_DIR}"
IOS_SIMULATOR_UNIVERSAL_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_IOS_SIMULATOR_UNIVERSAL}/${PUBLISH_DIR}"
IOS_UNIVERSAL_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_IOS_UNIVERSAL}/${PUBLISH_DIR}"

MACOS_X64_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_MACOS_X64}/${PUBLISH_DIR}"
MACOS_ARM64_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_MACOS_ARM64}/${PUBLISH_DIR}"
MACOS_UNIVERSAL_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_MACOS_UNIVERSAL}/${PUBLISH_DIR}"

APPLE_UNIVERSAL_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_APPLE_UNIVERSAL}/${PUBLISH_DIR}"

IOS_ARM64_FILE_PATH="${IOS_ARM64_BUILD_DIR}/${OUTPUT_FILE_NAME}"
IOS_SIMULATOR_ARM64_FILE_PATH="${IOS_SIMULATOR_ARM64_BUILD_DIR}/${OUTPUT_FILE_NAME}"
IOS_SIMULATOR_X64_FILE_PATH="${IOS_SIMULATOR_X64_BUILD_DIR}/${OUTPUT_FILE_NAME}"
IOS_SIMULATOR_UNIVERSAL_FILE_PATH="${IOS_SIMULATOR_UNIVERSAL_BUILD_DIR}/${OUTPUT_FILE_NAME}"
IOS_UNIVERSAL_FILE_PATH="${IOS_UNIVERSAL_BUILD_DIR}/${UNIVERSAL_FILE_NAME}"

MACOS_X64_FILE_PATH="${MACOS_X64_BUILD_DIR}/${OUTPUT_FILE_NAME}"
MACOS_ARM64_FILE_PATH="${MACOS_ARM64_BUILD_DIR}/${OUTPUT_FILE_NAME}"
MACOS_UNIVERSAL_FILE_PATH="${MACOS_UNIVERSAL_BUILD_DIR}/${OUTPUT_FILE_NAME}"

APPLE_UNIVERSAL_FILE_PATH="${APPLE_UNIVERSAL_BUILD_DIR}/${UNIVERSAL_FILE_NAME}"

echo "Cleaning ${OUTPUT_PRODUCT_NAME}"
${DOTNET_PATH} clean /p:Configuration=Release


# Compile for macOS

echo "Building ${OUTPUT_PRODUCT_NAME} for macOS x64"
${DOTNET_PATH} publish -r ${RUNTIME_IDENTIFIER_MACOS_X64} -v "${VERBOSITY_LEVEL}"

echo "Building ${OUTPUT_PRODUCT_NAME} for macOS ARM64"
${DOTNET_PATH} publish -r ${RUNTIME_IDENTIFIER_MACOS_ARM64} -v "${VERBOSITY_LEVEL}"

echo "Making directory for universal ${OUTPUT_PRODUCT_NAME} macOS build"
mkdir -p "${MACOS_UNIVERSAL_BUILD_DIR}"

echo "Making universal ${OUTPUT_PRODUCT_NAME} macOS build"
lipo -create "${MACOS_X64_FILE_PATH}" "${MACOS_ARM64_FILE_PATH}" -output "${MACOS_UNIVERSAL_FILE_PATH}"

echo "Changing install name of universal ${OUTPUT_PRODUCT_NAME} macOS build"
install_name_tool -id "@rpath/${OUTPUT_FILE_NAME}" "${MACOS_UNIVERSAL_FILE_PATH}"


# Compile for iOS

echo "Building ${OUTPUT_PRODUCT_NAME} for iOS ARM64"
${DOTNET_PATH} publish -r "${RUNTIME_IDENTIFIER_IOS_ARM64}" -v "${VERBOSITY_LEVEL}"

echo "Changing install name of iOS ARM64 ${OUTPUT_PRODUCT_NAME} build"
install_name_tool -id "@rpath/${OUTPUT_FILE_NAME}" "${IOS_ARM64_FILE_PATH}"

echo "Building ${OUTPUT_PRODUCT_NAME} for iOS Simulator ARM64"
${DOTNET_PATH} publish -r "${RUNTIME_IDENTIFIER_IOS_SIMULATOR_ARM64}" -v "${VERBOSITY_LEVEL}"

echo "Changing install name of iOS Simulator ARM64 ${OUTPUT_PRODUCT_NAME} build"
install_name_tool -id "@rpath/${OUTPUT_FILE_NAME}" "${IOS_SIMULATOR_ARM64_FILE_PATH}"

echo "Building ${OUTPUT_PRODUCT_NAME} for iOS Simulator x64"
${DOTNET_PATH} publish -r "${RUNTIME_IDENTIFIER_IOS_SIMULATOR_X64}" -v "${VERBOSITY_LEVEL}"

echo "Changing install name of iOS Simulator x64 ${OUTPUT_PRODUCT_NAME} build"
install_name_tool -id "@rpath/${OUTPUT_FILE_NAME}" "${IOS_SIMULATOR_X64_FILE_PATH}"

echo "Making directory for universal ${OUTPUT_PRODUCT_NAME} iOS Simulator (ARM64/x64) build"
mkdir -p "${IOS_SIMULATOR_UNIVERSAL_BUILD_DIR}"

echo "Making universal ${OUTPUT_PRODUCT_NAME} iOS Simulator (ARM64/x64) build"
lipo -create "${IOS_SIMULATOR_ARM64_FILE_PATH}" "${IOS_SIMULATOR_X64_FILE_PATH}" -output "${IOS_SIMULATOR_UNIVERSAL_FILE_PATH}"

echo "Changing install name of iOS Simulator Universal ${OUTPUT_PRODUCT_NAME} build"
install_name_tool -id "@rpath/${OUTPUT_FILE_NAME}" "${IOS_SIMULATOR_UNIVERSAL_FILE_PATH}"

echo "Making directory for universal iOS ${OUTPUT_PRODUCT_NAME} build"
mkdir -p "${IOS_UNIVERSAL_BUILD_DIR}"

if [ -d "${IOS_UNIVERSAL_FILE_PATH}" ] 
then
	echo "Removing universal iOS xcframework"
	rm -r "${IOS_UNIVERSAL_FILE_PATH}"
fi

echo "Making universal iOS xcframework for ${OUTPUT_PRODUCT_NAME}"
xcodebuild -create-xcframework -library "${IOS_SIMULATOR_UNIVERSAL_FILE_PATH}" -library "${IOS_ARM64_FILE_PATH}" -output "${IOS_UNIVERSAL_FILE_PATH}"


# Compile for Apple Universal

echo "Making directory for universal Apple ${OUTPUT_PRODUCT_NAME} build"
mkdir -p "${APPLE_UNIVERSAL_BUILD_DIR}"

if [ -d "${APPLE_UNIVERSAL_BUILD_DIR}" ] 
then
	echo "Removing universal Apple xcframework"
	rm -r "${APPLE_UNIVERSAL_BUILD_DIR}"
fi

echo "Making universal Apple xcframework for ${OUTPUT_PRODUCT_NAME}"
xcodebuild -create-xcframework -library "${MACOS_UNIVERSAL_FILE_PATH}" -library "${IOS_SIMULATOR_UNIVERSAL_FILE_PATH}" -library "${IOS_ARM64_FILE_PATH}" -output "${APPLE_UNIVERSAL_FILE_PATH}"