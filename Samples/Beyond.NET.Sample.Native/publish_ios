#!/usr/bin/env bash

set -e

OUTPUT_PRODUCT_NAME="libBeyondDotNETSampleNative"
BUILD_CONFIGURATION="Release"

OUTPUT_FILE_NAME="${OUTPUT_PRODUCT_NAME}.dylib"
UNIVERSAL_FILE_NAME="${OUTPUT_PRODUCT_NAME}.xcframework"

DOTNET_PATH=`which dotnet`
DOTNET_VERSION=`${DOTNET_PATH} --version`
DOTNET_VERSION_MAJOR_AND_MINOR=${DOTNET_VERSION:0:3}

VERBOSITY_LEVEL="normal"

RUNTIME_IDENTIFIER_ARM64="ios-arm64"
RUNTIME_IDENTIFIER_SIMULATOR_ARM64="iossimulator-arm64"
RUNTIME_IDENTIFIER_SIMULATOR_X64="iossimulator-x64"
RUNTIME_IDENTIFIER_SIMULATOR_UNIVERSAL="iossimulator-universal"
RUNTIME_IDENTIFIER_UNIVERSAL="ios-universal"

BIN_DIR="bin"
PUBLISH_DIR="publish"
DOTNET_TARGET_FRAMEWORK="net${DOTNET_VERSION_MAJOR_AND_MINOR}"

ARM64_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_ARM64}/${PUBLISH_DIR}"
SIMULATOR_ARM64_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_SIMULATOR_ARM64}/${PUBLISH_DIR}"
SIMULATOR_X64_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_SIMULATOR_X64}/${PUBLISH_DIR}"
SIMULATOR_UNIVERSAL_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_SIMULATOR_UNIVERSAL}/${PUBLISH_DIR}"
UNIVERSAL_BUILD_DIR="${BIN_DIR}/${BUILD_CONFIGURATION}/${DOTNET_TARGET_FRAMEWORK}/${RUNTIME_IDENTIFIER_UNIVERSAL}/${PUBLISH_DIR}"

ARM64_FILE_PATH="${ARM64_BUILD_DIR}/${OUTPUT_FILE_NAME}"
SIMULATOR_ARM64_FILE_PATH="${SIMULATOR_ARM64_BUILD_DIR}/${OUTPUT_FILE_NAME}"
SIMULATOR_X64_FILE_PATH="${SIMULATOR_X64_BUILD_DIR}/${OUTPUT_FILE_NAME}"
SIMULATOR_UNIVERSAL_FILE_PATH="${SIMULATOR_UNIVERSAL_BUILD_DIR}/${OUTPUT_FILE_NAME}"
UNIVERSAL_FILE_PATH="${UNIVERSAL_BUILD_DIR}/${UNIVERSAL_FILE_NAME}"

echo "Cleaning ${OUTPUT_PRODUCT_NAME}"
${DOTNET_PATH} clean /p:Configuration=Release

echo "Building ${OUTPUT_PRODUCT_NAME} for ARM64"
${DOTNET_PATH} publish -r "${RUNTIME_IDENTIFIER_ARM64}" -v "${VERBOSITY_LEVEL}"

echo "Changing install name of ARM64 ${OUTPUT_PRODUCT_NAME} build"
install_name_tool -id "@rpath/${OUTPUT_FILE_NAME}" "${ARM64_FILE_PATH}"

echo "Building ${OUTPUT_PRODUCT_NAME} for Simulator ARM64"
${DOTNET_PATH} publish -r "${RUNTIME_IDENTIFIER_SIMULATOR_ARM64}" -v "${VERBOSITY_LEVEL}"

echo "Changing install name of Simulator ARM64 ${OUTPUT_PRODUCT_NAME} build"
install_name_tool -id "@rpath/${OUTPUT_FILE_NAME}" "${SIMULATOR_ARM64_FILE_PATH}"

echo "Building ${OUTPUT_PRODUCT_NAME} for Simulator x64"
${DOTNET_PATH} publish -r "${RUNTIME_IDENTIFIER_SIMULATOR_X64}" -v "${VERBOSITY_LEVEL}"

echo "Changing install name of Simulator x64 ${OUTPUT_PRODUCT_NAME} build"
install_name_tool -id "@rpath/${OUTPUT_FILE_NAME}" "${SIMULATOR_X64_FILE_PATH}"

echo "Making directory for universal ${OUTPUT_PRODUCT_NAME} Simulator (ARM64/x64) build"
mkdir -p "${SIMULATOR_UNIVERSAL_BUILD_DIR}"

echo "Making universal ${OUTPUT_PRODUCT_NAME} Simulator (ARM64/x64) build"
lipo -create "${SIMULATOR_ARM64_FILE_PATH}" "${SIMULATOR_X64_FILE_PATH}" -output "${SIMULATOR_UNIVERSAL_FILE_PATH}"

echo "Changing install name of Simulator Universal ${OUTPUT_PRODUCT_NAME} build"
install_name_tool -id "@rpath/${OUTPUT_FILE_NAME}" "${SIMULATOR_UNIVERSAL_FILE_PATH}"

echo "Making directory for universal ${OUTPUT_PRODUCT_NAME} build"
mkdir -p "${UNIVERSAL_BUILD_DIR}"

if [ -d "${UNIVERSAL_FILE_PATH}" ] 
then
	echo "Removing universal xcframework"
	rm -r "${UNIVERSAL_FILE_PATH}"
fi

echo "Making universal xcframework for ${OUTPUT_PRODUCT_NAME}"
xcodebuild -create-xcframework -library "${SIMULATOR_UNIVERSAL_FILE_PATH}" -library "${ARM64_FILE_PATH}" -output "${UNIVERSAL_FILE_PATH}"