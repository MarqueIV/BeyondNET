// Number of generated types: 159
// Number of generated members: 0

#pragma mark - BEGIN Header
#ifndef TypeDefinitions_h
#define TypeDefinitions_h

#import <stdlib.h>

#pragma mark - END Header
#pragma mark - BEGIN Shared Code
#pragma mark - Common Enums
typedef enum __attribute__((enum_extensibility(closed))): uint8_t {
    CBoolYes = 1,
    CBoolNo = 0
} CBool;

#pragma mark - END Shared Code
#pragma mark - BEGIN Unsupported Types
// Omitted due to settings

#pragma mark - END Unsupported Types
#pragma mark - BEGIN APIs
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)
// TODO (Type)

#pragma mark - END APIs
#pragma mark - BEGIN Footer
#endif /* TypeDefinitions_h */

#pragma mark - END Footer
